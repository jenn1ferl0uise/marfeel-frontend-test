!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);const r=e=>{if("Not Found"===e.message){const e='\n    <div class="error-message">\n    <p>Does not exist</p>\n    </div>';results.insertAdjacentHTML("beforeend",e)}else{const n=`\n      <div id="profile">\n        <div id="user-avatar" style="background-image: url(${e.avatar_url})";>\n        </div>\n        <div id="user-info">\n          <p><em>@${e.login}</em></p>\n          <h1>${e.name}</h1>\n          <p>${null==e.bio?"":e.bio}</p>\n        </div>\n      </div>\n      <h2>Repositories</h2>\n      `;results.insertAdjacentHTML("afterbegin",n)}},o=e=>{if(0==e.length||void 0===e){const e="<p>User has no repositories yet</p>";results.insertAdjacentHTML("beforeend",e)}else e.forEach(e=>{const n=`<li>\n          <span><h3>${e.name}</h3></span>\n          <span>\n            <img class="icon" src="./images/github_star.jpg"> ${e.stargazers_count}\n            <img class="icon" src="./images/github_fork.jpg"> ${e.forks_count}\n          </span>\n        </li>`;results.insertAdjacentHTML("beforeend",n)})},s=document.querySelector("#results");document.querySelector("#search-users").addEventListener("submit",e=>{e.preventDefault(),s.innerHTML="";const n=document.querySelector("#search-input");(e=>{fetch(`https://api.github.com/users/${e}`).then(e=>e.json()).then(r)})(n.value),(e=>{fetch(`https://api.github.com/users/${e}/repos`).then(e=>e.json()).then(o)})(n.value)})}]);